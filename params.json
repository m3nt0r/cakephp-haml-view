{"name":"Haml for CakePHP","body":"This plugin for the [CakePHP Framework](http://cakephp.org) allows you to use [Haml](http://haml.info/about.html) to create views.\r\n\r\n## What is Haml?\r\n\r\n> Haml is a markup language thatâ€™s used to cleanly and simply describe the XHTML of any web document, without the use of inline code.    Haml functions as a replacement for inline page templating systems such as PHP, ERB, and ASP. However, Haml avoids the need for explicitly coding XHTML into the template, because it is actually an abstract description of the XHTML, with some code to generate dynamic content.\r\n\r\n## Current Status\r\n\r\nThe view class itself is pretty solid, however not all sorts of Haml^Cake has been thrown at it yet.\r\n\r\nCheck out the **examples** directory. Converting entire CakePHP views looks perfectly possible, even at \r\nthis early state. I am almost entirely happy with the outcome, but see for yourself.\r\n\r\nThe renderer is a copy of a [phpHaml fork i found on GitHub](https://github.com/glasserc/phphaml), \r\nwhich is maintained by glasserc. I chose it over the sourceforge original as it contains lots \r\nof contributed fixes.\r\n\r\nFurthermore, i've forked the phpHaml fork [myself](https://github.com/m3nt0r/phphaml) so i can extend\r\nand fix it as i see fit. First thing i did was adding the new doctypes outlined in the official \r\n[HAML_REFERENCE](http://haml.info/docs/yardoc/file.HAML_REFERENCE.html).\r\n\r\n## Usage\r\n  \r\n  Add the View to your ```app_controller.php```\r\n  \r\n    class AppController extends Controller {\r\n        public $view = 'Haml.Haml'; // use twig\r\n    }\r\n    \r\n  Create ```.haml``` files inside your view folders\r\n  \r\n## What's missing\r\n\r\n- Some more tiny syntax stuff, see \"examples\"\r\n- Multiline is a little bit weird\r\n- ^ That includes spanning method calls over multiple lines\r\n","tagline":"Abstraction Markup Language","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}